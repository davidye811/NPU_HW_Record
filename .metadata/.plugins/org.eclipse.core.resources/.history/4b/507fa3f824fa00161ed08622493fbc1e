package quickSort;

import java.util.Arrays;
import java.util.Random;

public class Solution {
	static int[] arrayToSorted;
	public Solution(int[] arrayToSorted){
		this.arrayToSorted=arrayToSorted;
	}
	public void sort() {
		quickSort(0, arrayToSorted.length - 1);
	}
	public String toString(){
		return Arrays.toString(arrayToSorted);
	}
	private  void quickSort(int begin,int end){
		int seed=arrayToSorted[end];
		int i = begin;
		int j = end;
		if(begin>=end)
			return ;
		while(i<j){
			while(i<j&&arrayToSorted[i]<=seed){
				i++;
			}
			if(i<j){
			int temp=arrayToSorted[i];
			arrayToSorted[i]=arrayToSorted[j];
			arrayToSorted[j]=temp;
			
			}
			while(i<j&&arrayToSorted[j]>=seed){
				j--;
			}
			if(i<j){
				int temp=arrayToSorted[i];
				arrayToSorted[i]=arrayToSorted[j];
				arrayToSorted[j]=temp;
				
			}
		}
		quickSort(begin,j-1);
		quickSort(i+1,end);
		
	}
	
	public static void main(String[] argv){
		int[] array = {4, 1, 3, 2, 16, 9, 10, 14, 8, 7};
		Solution a =new Solution(array);
		a.sort();
		System.out.println(a);
	}
}
